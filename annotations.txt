#Gerar o projeto
- ng new gatitobook --strict

#Instalar bibliotecas
- npm i bootstrap
- npm i font-awesome

#Configurar o uso do Bootstrap Global no projeto
- abrir arquivo angular.json
- adicionar o caminho completo do bootstrap e font-awesome em node_modules no array "styles" no angular.json
            "styles": [
              "src/styles.css",
              "./node_modules/bootstrap/dist/css/bootstrap.min.css",
              "./node_modules/font-awesome/css/font-awesome.css"
            ],

#Criando o modulo home
- ng generate module home --routing
#Criando o componente home
- ng generate component home

#Exportar um componente
Deverá adicionar o componente no module do mesmo ex: home.modlue.ts
    @NgModule({
      declarations: [HomeComponent],
      imports: [
        CommonModule,
        HomeRoutingModule
      ],
      exports: [HomeComponent]
    })
Após a inclusão no module do componente (home.module.ts), o mesmo deve ser importado no module principal (app.module.ts). Após a importação, o componente estará disponivel para ser referenciado no index.HomeRoutingModule

#Comando para rodar o projeto
- ng serve --o

#Organizar rotatas
-No lazy loading a importação não é feita no module
-Incluir as rotas no arquivo routing.modules.ts dos componentes.
-Segue a configuração da rota padrão do arquivo app-routing.module.ts que adiciona, na rota, o home.module.ts
      const routes: Routes = [
        {path:'', pathMatch:'full', redirectTo: 'home'},
        {path:'home', loadChildren: () => import('./home/home.module').then((module) => module.HomeModule)}
      ];

#Criação de somente modulos
-ng generate module nomemodulo

#Criação de um serviço
-ng generate service nomemodulo/nomeservico

#Criar uma interface Typescript Model
-ng generate interface pasta/nomeinterface



